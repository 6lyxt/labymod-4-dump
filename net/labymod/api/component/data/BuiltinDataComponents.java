// 
// Decompiled by Procyon v0.6.0
// 

package net.labymod.api.component.data;

public final class BuiltinDataComponents
{
    public static final DataComponentKey ATTRIBUTE_MODIFIERS;
    public static final DataComponentKey AXOLOTL_VARIANT;
    public static final DataComponentKey BANNER_PATTERNS;
    public static final DataComponentKey BASE_COLOR;
    public static final DataComponentKey BEES;
    public static final DataComponentKey BLOCK_ENTITY_DATA;
    public static final DataComponentKey BLOCK_STATE;
    public static final DataComponentKey BLOCKS_ATTACKS;
    public static final DataComponentKey BREAK_SOUND;
    public static final DataComponentKey BUCKET_ENTITY_DATA;
    public static final DataComponentKey BUNDLE_CONTENTS;
    public static final DataComponentKey CAN_BREAK;
    public static final DataComponentKey CAN_PLACE_ON;
    public static final DataComponentKey CAT_COLLAR;
    public static final DataComponentKey CAT_VARIANT;
    public static final DataComponentKey CHARGED_PROJECTILES;
    public static final DataComponentKey CHICKEN_VARIANT;
    public static final DataComponentKey CONSUMABLE;
    public static final DataComponentKey CONTAINER;
    public static final DataComponentKey CONTAINER_LOOT;
    public static final DataComponentKey COW_VARIANT;
    public static final DataComponentKey CREATIVE_SLOT_LOCK;
    public static final DataComponentKey CUSTOM_DATA;
    public static final DataComponentKey CUSTOM_MODEL_DATA;
    public static final DataComponentKey CUSTOM_NAME;
    public static final DataComponentKey DAMAGE;
    public static final DataComponentKey DAMAGE_RESISTANT;
    public static final DataComponentKey DEATH_PROTECTION;
    public static final DataComponentKey DEBUG_STICK_STATE;
    public static final DataComponentKey DYED_COLOR;
    public static final DataComponentKey ENCHANTABLE;
    public static final DataComponentKey ENCHANTMENT_GLINT_OVERRIDE;
    public static final DataComponentKey ENCHANTMENTS;
    public static final DataComponentKey ENTITY_DATA;
    public static final DataComponentKey EQUIPPABLE;
    public static final DataComponentKey FIRE_RESISTANT;
    public static final DataComponentKey FIREWORK_EXPLOSION;
    public static final DataComponentKey FIREWORKS;
    public static final DataComponentKey FOOD;
    public static final DataComponentKey FOX_VARIANT;
    public static final DataComponentKey FROG_VARIANT;
    public static final DataComponentKey GLIDER;
    public static final DataComponentKey HIDE_ADDITIONAL_TOOLTIP;
    public static final DataComponentKey HIDE_TOOLTIP;
    public static final DataComponentKey HORSE_VARIANT;
    public static final DataComponentKey INSTRUMENT;
    public static final DataComponentKey INTANGIBLE_PROJECTILE;
    public static final DataComponentKey ITEM_MODEL;
    public static final DataComponentKey ITEM_NAME;
    public static final DataComponentKey JUKEBOX_PLAYABLE;
    public static final DataComponentKey LLAMA_VARIANT;
    public static final DataComponentKey LOCK;
    public static final DataComponentKey LODESTONE_TRACKER;
    public static final DataComponentKey LORE;
    public static final DataComponentKey MAP_COLOR;
    public static final DataComponentKey MAP_DECORATIONS;
    public static final DataComponentKey MAP_ID;
    public static final DataComponentKey MAP_POST_PROCESSING;
    public static final DataComponentKey MAX_DAMAGE;
    public static final DataComponentKey MAX_STACK_SIZE;
    public static final DataComponentKey MOOSHROOM_VARIANT;
    public static final DataComponentKey NOTE_BLOCK_SOUND;
    public static final DataComponentKey OMINOUS_BOTTLE_AMPLIFIER;
    public static final DataComponentKey PAINTING_VARIANT;
    public static final DataComponentKey PARROT_VARIANT;
    public static final DataComponentKey PIG_VARIANT;
    public static final DataComponentKey POT_DECORATIONS;
    public static final DataComponentKey POTION_CONTENTS;
    public static final DataComponentKey POTION_DURATION_SCALE;
    public static final DataComponentKey PROFILE;
    public static final DataComponentKey PROVIDES_BANNER_PATTERNS;
    public static final DataComponentKey PROVIDES_TRIM_MATERIAL;
    public static final DataComponentKey RABBIT_VARIANT;
    public static final DataComponentKey RARITY;
    public static final DataComponentKey RECIPES;
    public static final DataComponentKey REPAIR_COST;
    public static final DataComponentKey REPAIRABLE;
    public static final DataComponentKey SALMON_SIZE;
    public static final DataComponentKey SHEEP_COLOR;
    public static final DataComponentKey SHULKER_COLOR;
    public static final DataComponentKey STORED_ENCHANTMENTS;
    public static final DataComponentKey SUSPICIOUS_STEW_EFFECTS;
    public static final DataComponentKey TOOL;
    public static final DataComponentKey TOOLTIP_DISPLAY;
    public static final DataComponentKey TOOLTIP_STYLE;
    public static final DataComponentKey TRIM;
    public static final DataComponentKey TROPICAL_FISH_BASE_COLOR;
    public static final DataComponentKey TROPICAL_FISH_PATTERN;
    public static final DataComponentKey TROPICAL_FISH_PATTERN_COLOR;
    public static final DataComponentKey UNBREAKABLE;
    public static final DataComponentKey USE_COOLDOWN;
    public static final DataComponentKey USE_REMAINDER;
    public static final DataComponentKey VILLAGER_VARIANT;
    public static final DataComponentKey WEAPON;
    public static final DataComponentKey WOLF_COLLAR;
    public static final DataComponentKey WOLF_SOUND_VARIANT;
    public static final DataComponentKey WOLF_VARIANT;
    public static final DataComponentKey WRITABLE_BOOK_CONTENT;
    public static final DataComponentKey WRITTEN_BOOK_CONTENT;
    
    static {
        ATTRIBUTE_MODIFIERS = DataComponentKey.fromId("attribute_modifiers");
        AXOLOTL_VARIANT = DataComponentKey.fromId("axolotl/variant");
        BANNER_PATTERNS = DataComponentKey.fromId("banner_patterns");
        BASE_COLOR = DataComponentKey.fromId("base_color");
        BEES = DataComponentKey.fromId("bees");
        BLOCK_ENTITY_DATA = DataComponentKey.fromId("block_entity_data");
        BLOCK_STATE = DataComponentKey.fromId("block_state");
        BLOCKS_ATTACKS = DataComponentKey.fromId("blocks_attacks");
        BREAK_SOUND = DataComponentKey.fromId("break_sound");
        BUCKET_ENTITY_DATA = DataComponentKey.fromId("bucket_entity_data");
        BUNDLE_CONTENTS = DataComponentKey.fromId("bundle_contents");
        CAN_BREAK = DataComponentKey.fromId("can_break");
        CAN_PLACE_ON = DataComponentKey.fromId("can_place_on");
        CAT_COLLAR = DataComponentKey.fromId("cat/collar");
        CAT_VARIANT = DataComponentKey.fromId("cat/variant");
        CHARGED_PROJECTILES = DataComponentKey.fromId("charged_projectiles");
        CHICKEN_VARIANT = DataComponentKey.fromId("chicken/variant");
        CONSUMABLE = DataComponentKey.fromId("consumable");
        CONTAINER = DataComponentKey.fromId("container");
        CONTAINER_LOOT = DataComponentKey.fromId("container_loot");
        COW_VARIANT = DataComponentKey.fromId("cow/variant");
        CREATIVE_SLOT_LOCK = DataComponentKey.fromId("creative_slot_lock");
        CUSTOM_DATA = DataComponentKey.fromId("custom_data");
        CUSTOM_MODEL_DATA = DataComponentKey.fromId("custom_model_data");
        CUSTOM_NAME = DataComponentKey.fromId("custom_name");
        DAMAGE = DataComponentKey.fromId("damage");
        DAMAGE_RESISTANT = DataComponentKey.fromId("damage_resistant");
        DEATH_PROTECTION = DataComponentKey.fromId("death_protection");
        DEBUG_STICK_STATE = DataComponentKey.fromId("debug_stick_state");
        DYED_COLOR = DataComponentKey.fromId("dyed_color");
        ENCHANTABLE = DataComponentKey.fromId("enchantable");
        ENCHANTMENT_GLINT_OVERRIDE = DataComponentKey.fromId("enchantment_glint_override");
        ENCHANTMENTS = DataComponentKey.fromId("enchantments");
        ENTITY_DATA = DataComponentKey.fromId("entity_data");
        EQUIPPABLE = DataComponentKey.fromId("equippable");
        FIRE_RESISTANT = DataComponentKey.fromId("fire_resistant");
        FIREWORK_EXPLOSION = DataComponentKey.fromId("firework_explosion");
        FIREWORKS = DataComponentKey.fromId("fireworks");
        FOOD = DataComponentKey.fromId("food");
        FOX_VARIANT = DataComponentKey.fromId("fox/variant");
        FROG_VARIANT = DataComponentKey.fromId("frog/variant");
        GLIDER = DataComponentKey.fromId("glider");
        HIDE_ADDITIONAL_TOOLTIP = DataComponentKey.fromId("hide_additional_tooltip");
        HIDE_TOOLTIP = DataComponentKey.fromId("hide_tooltip");
        HORSE_VARIANT = DataComponentKey.fromId("horse/variant");
        INSTRUMENT = DataComponentKey.fromId("instrument");
        INTANGIBLE_PROJECTILE = DataComponentKey.fromId("intangible_projectile");
        ITEM_MODEL = DataComponentKey.fromId("item_model");
        ITEM_NAME = DataComponentKey.fromId("item_name");
        JUKEBOX_PLAYABLE = DataComponentKey.fromId("jukebox_playable");
        LLAMA_VARIANT = DataComponentKey.fromId("llama/variant");
        LOCK = DataComponentKey.fromId("lock");
        LODESTONE_TRACKER = DataComponentKey.fromId("lodestone_tracker");
        LORE = DataComponentKey.fromId("lore");
        MAP_COLOR = DataComponentKey.fromId("map_color");
        MAP_DECORATIONS = DataComponentKey.fromId("map_decorations");
        MAP_ID = DataComponentKey.fromId("map_id");
        MAP_POST_PROCESSING = DataComponentKey.fromId("map_post_processing");
        MAX_DAMAGE = DataComponentKey.fromId("max_damage");
        MAX_STACK_SIZE = DataComponentKey.fromId("max_stack_size");
        MOOSHROOM_VARIANT = DataComponentKey.fromId("mooshroom/variant");
        NOTE_BLOCK_SOUND = DataComponentKey.fromId("note_block_sound");
        OMINOUS_BOTTLE_AMPLIFIER = DataComponentKey.fromId("ominous_bottle_amplifier");
        PAINTING_VARIANT = DataComponentKey.fromId("painting/variant");
        PARROT_VARIANT = DataComponentKey.fromId("parrot/variant");
        PIG_VARIANT = DataComponentKey.fromId("pig/variant");
        POT_DECORATIONS = DataComponentKey.fromId("pot_decorations");
        POTION_CONTENTS = DataComponentKey.fromId("potion_contents");
        POTION_DURATION_SCALE = DataComponentKey.fromId("potion_duration_scale");
        PROFILE = DataComponentKey.fromId("profile");
        PROVIDES_BANNER_PATTERNS = DataComponentKey.fromId("provides_banner_patterns");
        PROVIDES_TRIM_MATERIAL = DataComponentKey.fromId("provides_trim_material");
        RABBIT_VARIANT = DataComponentKey.fromId("rabbit/variant");
        RARITY = DataComponentKey.fromId("rarity");
        RECIPES = DataComponentKey.fromId("recipes");
        REPAIR_COST = DataComponentKey.fromId("repair_cost");
        REPAIRABLE = DataComponentKey.fromId("repairable");
        SALMON_SIZE = DataComponentKey.fromId("salmon/size");
        SHEEP_COLOR = DataComponentKey.fromId("sheep/color");
        SHULKER_COLOR = DataComponentKey.fromId("shulker/color");
        STORED_ENCHANTMENTS = DataComponentKey.fromId("stored_enchantments");
        SUSPICIOUS_STEW_EFFECTS = DataComponentKey.fromId("suspicious_stew_effects");
        TOOL = DataComponentKey.fromId("tool");
        TOOLTIP_DISPLAY = DataComponentKey.fromId("tooltip_display");
        TOOLTIP_STYLE = DataComponentKey.fromId("tooltip_style");
        TRIM = DataComponentKey.fromId("trim");
        TROPICAL_FISH_BASE_COLOR = DataComponentKey.fromId("tropical_fish/base_color");
        TROPICAL_FISH_PATTERN = DataComponentKey.fromId("tropical_fish/pattern");
        TROPICAL_FISH_PATTERN_COLOR = DataComponentKey.fromId("tropical_fish/pattern_color");
        UNBREAKABLE = DataComponentKey.fromId("unbreakable");
        USE_COOLDOWN = DataComponentKey.fromId("use_cooldown");
        USE_REMAINDER = DataComponentKey.fromId("use_remainder");
        VILLAGER_VARIANT = DataComponentKey.fromId("villager/variant");
        WEAPON = DataComponentKey.fromId("weapon");
        WOLF_COLLAR = DataComponentKey.fromId("wolf/collar");
        WOLF_SOUND_VARIANT = DataComponentKey.fromId("wolf/sound_variant");
        WOLF_VARIANT = DataComponentKey.fromId("wolf/variant");
        WRITABLE_BOOK_CONTENT = DataComponentKey.fromId("writable_book_content");
        WRITTEN_BOOK_CONTENT = DataComponentKey.fromId("written_book_content");
    }
}
